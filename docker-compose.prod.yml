services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend/:/usr/src/backend/
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    environment:
      PYTHONPATH: /usr/src/backend
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./backend/.env
    environment:
      PGDATA: /var/lib/postgresql/data/
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pguser -d crud_in_the_cloud_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    shm_size: "2gb"

  pgadmin4:
    image: elestio/pgadmin:latest
    restart: unless-stopped
    env_file:
      - ./backend/.env
    environment:
      PGADMIN_LISTEN_PORT: 80
      GUNICORN_TIMEOUT: 300
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/pgadmin4/servers.json
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-O-", "http://localhost:80/misc/ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx-proxy:
    container_name: nginx-proxy
    build: nginx
    restart: always
    ports:
      - 443:443
      - 80:80
    volumes:
      - static_volume:/usr/src/backend/staticfiles
      - media_volume:/usr/src/backend/mediafiles
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - backend

  acme-companion:
    image: nginxproxy/acme-companion
    env_file:
      - ./.env.prod.proxy-companion
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - acme:/etc/acme.sh
    depends_on:
      - nginx-proxy

volumes:
  postgres_data:
  pgadmin_data:
  static_volume:
  media_volume:
  certs:
  html:
  vhost:
  acme:
